version: '3.8'
#As much as I don't like it, it seems that the best way to manage ports in nginx is to hardcode them.
services:
  web:
    build: seattlecontratunes/
    #command: python seattlecontratunes/manage.py runserver 0.0.0.0:${PORT}
    command: gunicorn seattlecontratunes.wsgi:application --preload --bind 0.0.0.0:8000
    expose:
      - 8000:8000
    #env_file: .env.dev
    #depends_on:
      #- db
    secrets:
      - DJANGO_SECRET_KEY
      - EMAIL_HOST
      - EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD
    volumes:
      - static_volume:/staticfiles
  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - static_volume:/staticfiles
    depends_on:
      - web

      
    
  #db:
  #  image: postgres:15
  #  ports:
  #    - 5431:5431
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data
  #  env_file:
  #    - ./.env.dev
  

    


volumes:
  postgres_data:
  static_volume:

secrets:
  DJANGO_SECRET_KEY:
    file: ./run/secrets/DJANGO_SECRET_KEY.txt
  EMAIL_HOST:
    file: ./run/secrets/EMAIL_HOST.txt
  EMAIL_HOST_USER:
    file: ./run/secrets/EMAIL_HOST_USER.txt
  EMAIL_HOST_PASSWORD:
    file: ./run/secrets/EMAIL_HOST_PASSWORD.txt
  DB_PASSWORD:
    file: ./run/secrets/DB_PASSWORD.txt  

  PORT:
    file: PORT.txt 

